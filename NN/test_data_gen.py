#!/usr/bin/env python3# -*- coding: utf-8 -*-import numpy as npdef generate_sinusoidal_data(num_samples, num_features):    frequencies = np.linspace(0.1, 10, num_features)  # Adjust range as needed    x = np.linspace(0, 1, num_features)  # Time variable    data = []    targets = []    for _ in range(num_samples):        phase_shift = np.random.rand() * 2 * np.pi  # Random phase shift        noise = np.random.normal(0, 0.1, num_features)  # Gaussian noise        sample = np.sin(2 * np.pi * frequencies * x + phase_shift) + noise        target = [np.random.uniform(-180, 180), np.random.uniform(-90, 90)]  # Random az, el        data.append(sample)        targets.append(target)    return np.array(data), np.array(targets)